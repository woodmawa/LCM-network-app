import com.softwood.domain.Device

//basic device rendering template

// inherited template rendered first - then test follows

//inherits template:"halParent"  //now works !!
model {
    Device device
}

def expandAttribs = []
if (device.location) expandAttribs << "site"
if (device.location) expandAttribs << "location"
if (device.domain) expandAttribs << "domain"
if (device.aliasNames) expandAttribs << "aliasNames"
if (device.runtimeOS) expandAttribs << "runtimeOS"
if (device.interfaces) expandAttribs << "interfaces"
if (device.attributes) expandAttribs << "attributes"

json jsonapi.render (device, [ jsonApiObject:true, expand: expandAttribs])

/* - custom rendering option
json {
    id device.id
    name  device.name
    deviceStatus device.deviceStatus
    adminStatus device.adminStatus
    opStatus device.opStatus
    resourceRoles device.roles
    indexInvestigation tmpl.'../indexInvestigation/manyToOneSite' (device.indexInvestigation)
    location tmpl.'../location/manyToOneLocation' (device.location)
    domain tmpl.'../networkDomain/domain' (device.domain)
    aliases g.render (template :"../alias/alias", collection:device.aliasNames, var:'alias')
    interfaces g.render (template :"../interface/interface", collection:device.interfaces, var:'netif')
    attributes g.render (template:"../flexAttribute/flexAttribute", collection:device.attributes, var:'attribute')
    freeStanding device.isFreeStanding
    virtual device.isVirtual
    managed device.isManaged
    if (device.numberOfCpu)
        cpu device.numberOfCpu
    if (device.memory)
        memory device.memory
    if (device.storage)
        storage device.storage
    if (device.ownedBy)
        ownedBy device.ownedBy
}*/
//json g.render (device, [expand:['indexInvestigation']])